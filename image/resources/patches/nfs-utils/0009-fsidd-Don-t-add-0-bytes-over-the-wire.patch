From e05d5372f19caf5bd5088884813be79203642d48 Mon Sep 17 00:00:00 2001
From: Richard Weinberger <richard@nod.at>
Date: Tue, 28 Feb 2023 11:28:18 +0100
Subject: [PATCH 9/9] fsidd: Don't add 0 bytes over the wire

No need to waste space and force everyone to use C strings.

Signed-off-by: Richard Weinberger <richard@nod.at>
---
 support/reexport/fsidd.c    | 10 +++++-----
 support/reexport/reexport.c |  4 ++--
 2 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/support/reexport/fsidd.c b/support/reexport/fsidd.c
index 7db8d053..95005221 100644
--- a/support/reexport/fsidd.c
+++ b/support/reexport/fsidd.c
@@ -94,7 +94,7 @@ static void client_cb(evutil_socket_t cl, short ev, void *d)
 			assert(asprintf(&answer, "- %s", "Command failed") != -1);
 		}
 
-		(void)send(cl, answer, strlen(answer) + 1, 0);
+		(void)send(cl, answer, strlen(answer), 0);
 
 		free(answer);
 	} else if (strncmp(buf, "get_or_create_fsidnum ", strlen("get_or_create_fsidnum ")) == 0) {
@@ -117,7 +117,7 @@ static void client_cb(evutil_socket_t cl, short ev, void *d)
 			assert(asprintf(&answer, "- %s", "Command failed") != -1);
 		}
 
-		(void)send(cl, answer, strlen(answer) + 1, 0);
+		(void)send(cl, answer, strlen(answer), 0);
 
 		free(answer);
 	} else if (strncmp(buf, "get_path ", strlen("get_path ")) == 0) {
@@ -148,19 +148,19 @@ static void client_cb(evutil_socket_t cl, short ev, void *d)
 			}
 		}
 
-		(void)send(cl, answer, strlen(answer) + 1, 0);
+		(void)send(cl, answer, strlen(answer), 0);
 
 		free(path);
 		free(answer);
 	} else if (strcmp(buf, "version") == 0) {
 		char answer[] = "+ 1";
 
-		(void)send(cl, answer, sizeof(answer), 0);
+		(void)send(cl, answer, strlen(answer), 0);
 	} else {
 		char *answer = NULL;
 
 		assert(asprintf(&answer, "- bad command") != -1);
-		(void)send(cl, answer, strlen(answer) + 1, 0);
+		(void)send(cl, answer, strlen(answer), 0);
 
 		free(answer);
 	}
diff --git a/support/reexport/reexport.c b/support/reexport/reexport.c
index 3540eb80..183709f4 100644
--- a/support/reexport/reexport.c
+++ b/support/reexport/reexport.c
@@ -86,7 +86,7 @@ static bool parse_fsidd_reply(const char *cmd_info, char *buf, size_t len, char
 	}
 
 	if (buf[0] == '-') {
-		if (len > 3) {
+		if (len > 2) {
 			char *reason = buf + 2;
 			xlog(L_WARNING, "Command %s failed, server said: %s", cmd_info, reason);
 		} else {
@@ -101,7 +101,7 @@ static bool parse_fsidd_reply(const char *cmd_info, char *buf, size_t len, char
 		return false;
 	}
 
-	if (len > 3) {
+	if (len > 2) {
 		*result = strdup(buf + 2);
 	} else {
 		*result = NULL;
-- 
2.31.1

